drop view if exists dev.vw_confimp_account_invoice;
drop table if exists dev.account_invoice_line;
drop table if exists dev.account_invoice;


CREATE TABLE dev.account_invoice (
 id int NOT NULL,
 message_main_attachment_id int4 NULL,
 access_token varchar NULL,
 "name" varchar NULL,
 origin varchar NULL,
 "type" varchar NULL,
 refund_invoice_id int4 NULL,
 "number" varchar NULL,
 move_name varchar NULL,
 reference varchar NULL,
 "comment" text NULL,
 state varchar NULL,
 sent bool NULL,
 date_invoice date NULL,
 date_due date NULL,
 partner_id int4 NULL,
 vendor_bill_id int4 NULL,
 payment_term_id int4 NULL,
 "date" date NULL,
 account_id int4 NULL,
 move_id int4 NULL,
 amount_untaxed numeric NULL,
 amount_untaxed_signed numeric NULL,
 amount_tax numeric NULL,
 amount_total numeric NULL,
 amount_total_signed numeric NULL,
 amount_total_company_signed numeric NULL,
 currency_id int4 NOT NULL,
 journal_id int4 NOT NULL,
 company_id int4 NOT NULL,
 reconciled bool NULL,
 partner_bank_id int4 NULL,
 residual numeric NULL,
 residual_signed numeric NULL,
 residual_company_signed numeric NULL,
 user_id int4 NULL,
 fiscal_position_id int4 NULL,
 commercial_partner_id int4 NULL,
 cash_rounding_id int4 NULL,
 incoterm_id int4 NULL,
 source_email varchar NULL,
 vendor_display_name varchar NULL,
 create_uid int4 NULL,
 create_date timestamp NULL,
 write_uid int4 NULL,
 write_date timestamp NULL,
 land_id int4 NULL,
 payment_mode_id int4 NULL,
 reference_type varchar NOT NULL,
 instructions text NULL,
 file_boleto_pdf_id int4 NULL,
 transmit_method_id int4 NULL,
 transmit_method_code varchar NULL,
 CONSTRAINT devaccount_invoice_number_uniq UNIQUE (number, company_id, journal_id, type),
 CONSTRAINT devaccount_invoice_pkey PRIMARY KEY (id)
);

CREATE INDEX devaccount_invoice_date_due_index ON dev.account_invoice USING btree (date_due);
CREATE INDEX devaccount_invoice_date_due_index1 ON dev.account_invoice USING btree (land_id);
CREATE INDEX devaccount_invoice_date_invoice_index ON dev.account_invoice USING btree (date_invoice);
CREATE INDEX devaccount_invoice_message_main_attachment_id_index ON dev.account_invoice USING btree (message_main_attachment_id);
CREATE INDEX devaccount_invoice_move_id_index ON dev.account_invoice USING btree (move_id);
CREATE INDEX devaccount_invoice_name_index ON dev.account_invoice USING btree (name);
CREATE INDEX devaccount_invoice_state_index ON dev.account_invoice USING btree (state);
CREATE INDEX devaccount_invoice_type_index ON dev.account_invoice USING btree (type);


CREATE TABLE dev.account_invoice_line (
 id int NOT NULL,
 "name" text NOT NULL,
 origin varchar NULL,
 "sequence" int4 NULL,
 invoice_id int4 NULL,
 uom_id int4 NULL,
 product_id int4 NULL,
 account_id int4 NULL,
 price_unit numeric NOT NULL,
 price_subtotal numeric NULL,
 price_total numeric NULL,
 price_subtotal_signed numeric NULL,
 quantity numeric NOT NULL,
 discount numeric NULL,
 account_analytic_id int4 NULL,
 company_id int4 NULL,
 partner_id int4 NULL,
 currency_id int4 NULL,
 is_rounding_line bool NULL,
 display_type varchar NULL,
 create_uid int4 NULL,
 create_date timestamp NULL,
 write_uid int4 NULL,
 write_date timestamp NULL,
 CONSTRAINT account_invoice_line_accountable_required_fields CHECK (((display_type IS NOT NULL) OR (account_id IS NOT NULL))),
 CONSTRAINT account_invoice_line_non_accountable_fields_null CHECK (((display_type IS NULL) OR ((price_unit = (0)::numeric) AND (account_id IS NULL) AND (quantity = (0)::numeric)))),
 CONSTRAINT account_invoice_line_pkey PRIMARY KEY (id)
);

CREATE INDEX devaccount_invoice_line_invoice_id_index ON dev.account_invoice_line USING btree (invoice_id);
CREATE INDEX devaccount_invoice_line_product_id_index ON dev.account_invoice_line USING btree (product_id);
CREATE INDEX devaccount_invoice_line_uom_id_index ON dev.account_invoice_line USING btree (uom_id);




--inserindo tabela account_invoice
----------------------------------
insert into dev.account_invoice (id, create_uid, create_date, write_uid, write_date, message_main_attachment_id, access_token, "name", origin, "type", refund_invoice_id, "number", move_name, reference, "comment", state, sent, date_invoice, date_due, partner_id, vendor_bill_id, payment_term_id, "date", account_id, move_id, amount_untaxed, amount_untaxed_signed, amount_tax, amount_total, amount_total_signed, amount_total_company_signed, currency_id, journal_id, company_id, reconciled, partner_bank_id, residual, residual_signed, residual_company_signed, user_id, fiscal_position_id, commercial_partner_id, cash_rounding_id, incoterm_id, source_email, vendor_display_name, land_id, payment_mode_id, reference_type, instructions, file_boleto_pdf_id, transmit_method_id, transmit_method_code)
select id, create_uid, create_date, write_uid, write_date, message_main_attachment_id, access_token, "name", origin, "type", refund_invoice_id, "number", move_name, reference, "comment", state, sent, date_invoice, date_due, partner_id, vendor_bill_id, payment_term_id, "date", account_id, move_id, amount_untaxed, amount_untaxed_signed, amount_tax, amount_total, amount_total_signed, amount_total_company_signed, currency_id, journal_id, company_id, reconciled, partner_bank_id, residual, residual_signed, residual_company_signed, user_id, fiscal_position_id, commercial_partner_id, cash_rounding_id, incoterm_id, source_email, vendor_display_name, land_id, payment_mode_id, reference_type, instructions, file_boleto_pdf_id, transmit_method_id, transmit_method_code
  from public.account_invoice
 where anomes(date_due) = 202206;
    

--inserindo tabela account_invoice_line
---------------------------------------
  
insert into dev.account_invoice_line(id, create_uid, create_date, write_uid, write_date, "name", origin, "sequence", invoice_id, uom_id, product_id, account_id, price_unit, price_subtotal, price_total, price_subtotal_signed, quantity, discount, account_analytic_id, company_id, partner_id, currency_id, is_rounding_line, display_type)
select ail.id, ail.create_uid, ail.create_date, ail.write_uid, ail.write_date, ail."name", ail.origin, ail."sequence", invoice_id, uom_id, product_id, ail.account_id, price_unit, price_subtotal, price_total, price_subtotal_signed, quantity, discount, account_analytic_id, ail.company_id, ail.partner_id, ail.currency_id, is_rounding_line, display_type
  from public.account_invoice ai join account_invoice_line ail on ail.invoice_id = ai.id
 where anomes(ai.date_due) = 202206;

 

------------------------------------ 
--vw_confimp_account_invoice_dev
------------------------------------ 
-- dev.vw_boleto source

create or replace view dev.vw_confimp_account_invoice as
select partner_id,
       land_id,
       dev_id,
       odoo_id,
       vpl.module_code__block_code__lot_code2 land,
       res."name",
       dbo_amount_total,
       odoo_amount_total,
       dif,
       dbo_existe,
       odoo_existe,
       (select count(0)
          from dev.account_invoice_line ail
         where ail.invoice_id = t2.dev_id 
       ) dbo_linesCount,
       (select count(0)
          from account_invoice_line ail
         where ail.invoice_id = t2.odoo_id 
       ) odo_linesCount
  from (select t.partner_id,
               t.land_id,
               sum(t.dev_id) dev_id,
               sum(t.odoo_id) odoo_id,
               sum(t.dbo_amount_total) dbo_amount_total,
               sum(t.odoo_amount_total) odoo_amount_total,
               sum(t.dbo_amount_total - t.odoo_amount_total) dif,
               sum(t.dbo_Existe) dbo_Existe,
               sum(t.odoo_Existe) odoo_Existe               
          from (select ai.partner_id,
                       ai.land_id,
                       ai.id dev_id,
                       0 odoo_id, 
                       ai.amount_total dbo_amount_total,
                       0 odoo_amount_total,
                       1 dbo_Existe,
                       0 odoo_Existe
                  from dev.account_invoice ai
                union all
                select ai.partner_id,
                       ai.land_id,
                       0 dev_id,
                       ai.id odoo_id,
                       0  dbo_amount_total,
                       ai.amount_total odoo_amount_total,
                       0 dbo_Existe,
                       1 odoo_Existe
                  from account_invoice ai
                 where anomes(ai.date_due) = 202206
               ) t
         group by t.partner_id, t.land_id
       ) t2
       inner join vw_property_land vpl on vpl.id = t2.land_id
       inner join res_partner res on res.id = t2.partner_id;
       
       
/*
select dev_id,
       odoo_id,
       partner_id,
       land_id,
       land,
       "name",
       dbo_amount_total,
       odoo_amount_total,
       dif
  from dev.vw_confimp_account_invoice
  order by abs(dif) desc
*/ 
